cheking_cluster
import lotus.domino.*;
import java.util.Vector;
/*	
	1.собрать информацию о разнице документов в бд, расписания , прием , пациенты, архив услуг, договорной отдeл
	2.Если разница превышает 20 документов, создать документы по форме в базе для отправки , для последующей обработки и отправки
*/
public class JavaAgent extends AgentBase {

  public void NotesMain() {

    try {
      Session session = getSession();
      AgentContext agentContext = session.getAgentContext();

      // Domino servers
      String server1 = "scz1/MSCH22";   //сюда прописать cцз1
      String server2= "iron/MSCH22";      // cюда прописать айрон
      
      //Databases
      
      String database = "gp\\gp.nsf";
      String databases1 = "gp\\shedule.nsf";
      String databases2 = "gp\\attach.nsf";
      String databases3 = "gp\\amb.nsf";
      
    
       //Прием
      
      Database db = session.getDatabase(server1, database);
      
        String title = db.getTitle();
          
        Database db2 = session.getDatabase(server2, database);
          String title2 = db2.getTitle();
    
        //Расписание
          
          Database db3 = session.getDatabase(server1, databases1);
          
          String title3 = db3.getTitle();
            
          Database db4 = session.getDatabase(server2, databases1);
            String title4 = db4.getTitle();
            
        //Прикрепления
            
            Database db5 = session.getDatabase(server1, databases2);
            
            String title5 = db5.getTitle();
              
            Database db6 = session.getDatabase(server2, databases2);
              String title6 = db6.getTitle();
              
       
              //Кол-во документов в бд GetAllDocuments
              
       //Прием
          
  if (db.isOpen())
        System.out.println("Open");
        DocumentCollection dc = db.getAllDocuments();
        System.out.println("Cервер:" + server1 + "Database \"" +  title + "\" = " + dc.getCount() + " Документов") ;
      
	if (db2.isOpen())
        System.out.println("Open");
        DocumentCollection dc2 = db2.getAllDocuments();
        System.out.println("Cервер:" + server2 + "Database \"" +  title2+ "\" = " + dc2.getCount() + " Документов") ;
       
         
        
        //Расписания
        if (db3.isOpen())
            System.out.println("Open");
            DocumentCollection dc3 = db3.getAllDocuments();
            System.out.println("Cервер:" + server1 + "Database \"" +  title3 + "\" = " + dc3.getCount() + " Документов") ;
        
        if (db4.isOpen())
            System.out.println("Open");
            DocumentCollection dc4 = db4.getAllDocuments();
            System.out.println("Cервер:" + server2 + "Database \"" +  title4+ "\" = " + dc4.getCount() + " Документов") ;
            
        
            //Прикрепления
            
            if (db5.isOpen())
                System.out.println("Open");
                DocumentCollection dc5 = db5.getAllDocuments();
                System.out.println("Cервер:" + server1 + "Database \"" +  title5 + "\" = " + dc5.getCount() + " Документов") ;
            
            if (db6.isOpen())
                System.out.println("Open");
                DocumentCollection dc6 = db6.getAllDocuments();
                System.out.println("Cервер:" + server2 + "Database \"" +  title6+ "\" = " + dc6.getCount() + " Документов") ;
            
                //Integer FullDc = (dc.getCount() - dc2.getCount()); вот тут подумать бы...
                
   
                //if (dc.getCount.get(key))
                 if (dc3.getCount() - dc4.getCount() < 15 && dc.getCount() != dc2.getCount() && dc5.getCount() != dc6.getCount()) {//&& dc5.getCount() - dc6.getCount() && dc3.getCount() - dc4.getCount() > 10)  { // || dc5.getCount() != dc6.getCount()) { //(dc3.getCount() != dc4.getCount())
                	// if (dc.getCount() != dc2.getCount() && dc5.getCount() != dc6.getCount()) {
    	//if (dc.getCount() != dc2.getCount())	
	System.out.println("Разница документов в базе:"+ title2 + "," + title4 + "," + title6 + "." + dc.getCount() + "и" + dc2.getCount());
        
	Database dbS = agentContext.getCurrentDatabase();
	View view = dbS.getView("ForSettings");
	
	//получим настроечный документ для отправки по всем адресатам
	
	Document doc2 = view.getFirstDocument(); 
	
	//Создадим документ для отправки

    Document doc = dbS.createDocument();
    doc.appendItemValue("Form", "SendInfoCluster");
    doc.appendItemValue("Difference", "1");
    RichTextItem rti = doc.createRichTextItem("Body");
    rti.appendText("Перезагрузите кластерный репликатор на всех серверах кластера.разница документов в базах: ");
    rti.appendText(title2 + ',');
    rti.appendText(title4 + ',');
    rti.appendText(title6);
    doc.appendItemValue("Subject", "Разница документов в кластере");
    doc.appendItemValue("Principal", "scz");
    doc.appendItemValue("InetForm", "scz");
    doc.appendItemValue("SMTPOriginator", "scz");
    doc.appendItemValue("ReplyTo", "scz");
    doc.appendItemValue("RouteServers", "scz4/msch22");
    doc.appendItemValue("From", "scz");
    doc.appendItemValue("InetFrom", "scz@scz.ru");
    doc.appendItemValue("RouteServers", "scz4/msch22");
    doc.appendItemValue("INetSendTo", ".");
    doc.appendItemValue("tmpDisplayFrom_Preview", "scz");
    doc.appendItemValue("SMTPOriginator", "scz");
    
    doc.appendItemValue("DisplaySent", "AgentChekCluster");
    doc.appendItemValue("tmpDisplayFrom_Preview", "scz");
    doc.appendItemValue("SMTPOriginator", "scz");
    doc.appendItemValue("QSent", "1");
    
    Vector v = new Vector();
    String one = doc2.getItemValueString("SendAdrСlustOne");
    String two = doc2.getItemValueString("SendAdrClustTwo");
    String three = doc2.getItemValueString("SendAdrClustThree");
    String four = doc2.getItemValueString("SendAdrClustFour");
   // v.addElement(session.getUserName());
    System.out.println(one + two + three + four);
    
    v.addElement(one);
    v.addElement(two);
    v.addElement(three);
    v.addElement(four);
   
    //Отправим письмо по адресатам 
    doc.send(true,v);
    doc.save();
    }
   
    } catch(Exception e) {
      e.printStackTrace();
    }
  }
}
